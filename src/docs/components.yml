components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Shop:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        shopType:
          $ref: '#/components/schemas/ShopType'
      example:
        id: 5ebac534954b54139806c112
        name: Carrefour
        shopType: 
          id: 5ebac534954b54139806c112
          name: Supermarket

    ShopType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      example:
        id: 5ebac534954b54139806c112
        name: Supermarket

    LineContainer:
      type: object
      properties:
        id:
          type: string
        date:
          type: date
        shop:
          $ref: '#/components/schemas/Shop'
        amount:
          type: number
          format: currency
        month:
          type: integer
          minimum: 1
          maximum: 12
        year:
          type: integer
          minimum: 2019
          maximum: 2100
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/LineContainerItem'
      example:
        id: 5ebac534954b54139806c112
        date: 2021-06-07T22:00:00.000Z
        shop: 61067724913d172b5c710f6d
        totalAmount: 15.65
        month: 2
        year: 2019
        lineItems: [
          description: "description",
          lineCategory: 610fac49091cbeb604285c9f,
          amount: 15.95,
          account: 60f80fd394c17ebd20f51dd1,
          paymentType: Expense
        ]

    LineContainerItem:
      type: object
      properties:
        description:
          type: string
        lineCategory:
          $ref: '#/components/schemas/LineItemCategory'
        amount:
          type: number
          format: currency
        account:
          $ref: '#/components/schemas/Account'
        paymentType:
          type: string
          enum: [Income, Expense, Cashflow]
      example:
        description: "description"
        lineCategory: 610fac49091cbeb604285c9f
        amount: 15.95
        account: 60f80fd394c17ebd20f51dd1
        paymentType: Expense
    
    LineItemCategory:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      example:
        id: 5ebac534954b54139806c112
        name: Rent

    Account:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        accountType:
          type: string
          enum: [Bank, Mealvouchers, Cash, Savings, Investment]
        isDefault:
          type: boolean
          default: false
      example:
        id: 5ebac534954b54139806c112
        name: Main account
        accountType: Bank
        isDefault: false
    
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
